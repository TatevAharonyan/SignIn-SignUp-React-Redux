{"version":3,"sources":["form/Input.js","form/SignUp.js","constant/constant.js","actions/signInAction.js","form/SignIn.js","App.js","reportWebVitals.js","redusers/rootReduser.js","redusers/signInReduser.js","index.js"],"names":["Input","type","className","id","value","onClick","onBlur","SignUp","validUserEmail","errorUserEmail","errorUserConPass","validUserConPass","name","e","NEW_USER","newUser","data","console","log","payload","connect","state","newUserReducer","dispatch","bindActionCreators","selectButton","clickButtonSignIn","useState","inputName","setInputName","inputPass","setInputPass","inputConPass","setInputConPass","inputEmail","setInputEmail","errorUserName","setErrorUserName","errorUserPass","setErrorUserPass","setErrorUserEmail","setErrorUserConPass","URL","newUsers","onSubmit","preventDefault","fetch","email","then","response","status","json","alert","catch","erro","UserName","UserPass","method","headers","body","JSON","stringify","target","match","length","onclick","App","setSelectButton","src","alt","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReduser","action","store","createStore","combineReducers","applyMiddleware","thunk","withExtraArgument","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38eb8cc5.chunk.js","sourcesContent":["\r\nconst Input = ({ type, className, id, value, onClick, onBlur }) => {\r\n    return (\r\n        <input\r\n            type={type}\r\n            className={className}\r\n            id={id}\r\n            value={value}\r\n            onClick = {onClick}\r\n            onBlur = {onBlur}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input;","import { Fragment } from \"react\";\r\nimport Input from \"./Input\";\r\n\r\n\r\nconst SignUp = ({ validUserEmail, errorUserEmail, errorUserConPass, validUserConPass }) => {\r\n    return (\r\n\r\n        <Fragment>\r\n            <p>Confirm Password</p>\r\n                <Input\r\n                    className =\"inp\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onBlur = {e => validUserConPass(e) }\r\n                    \r\n                />\r\n                {errorUserConPass &&  <span id=\"spanP\" >fill in the all fields</span>}\r\n               \r\n                <p>Email</p>\r\n                <Input\r\n                    className=\"isnp\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onBlur = {e => validUserEmail(e)}\r\n                />\r\n                 {errorUserEmail &&  <span id=\"spanP\" > Email not correct. (example: ab@cd.com)</span>}\r\n            \r\n            \r\n\r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default SignUp;","\r\n\r\nexport const NEW_USER = \"NEW_USER\";\r\n\r\n\r\n\r\n","import { NEW_USER } from \"../constant/constant\"\r\n\r\n\r\nexport const newUser = data => {\r\nconsole.log (data, \"action\")\r\n    return {\r\n        type: NEW_USER,\r\n        payload : data,\r\n    }\r\n}\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Input from \"./Input\";\r\nimport SignUp from \"./SignUp\";\r\nimport { newUser } from \"./../actions/signInAction\";\r\n\r\n\r\n\r\nconst SignIn = ({ selectButton, newUser, clickButtonSignIn }) => {\r\n    const [inputName, setInputName] = useState(\"\");\r\n    const [inputPass, setInputPass] = useState(\"\");\r\n    const [inputConPass, setInputConPass] = useState(\"\");\r\n    const [inputEmail, setInputEmail] = useState(\"\");\r\n\r\n    const [errorUserName, setErrorUserName] = useState(false);\r\n    const [errorUserPass, setErrorUserPass] = useState(false);\r\n    const [errorUserEmail, setErrorUserEmail] = useState(false);\r\n    const [errorUserConPass, setErrorUserConPass] = useState(false);\r\n\r\n    const URL = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n    const newUsers = data =>{ \r\n        newUser(data)\r\n        \r\n                    setInputName(\"\");\r\n                    setInputPass(\"\");\r\n                    setInputConPass(\"\");\r\n                    setInputEmail(\"\")\r\n    };\r\n\r\n    // validation input name\r\n    const validUserName = e => {\r\n        setInputName(e.target.value);\r\n\r\n        if (inputName === \"\") {\r\n            setErrorUserName(true);\r\n        } else {\r\n\r\n            setErrorUserName(false);\r\n        }\r\n    }\r\n    // validation input password\r\n    const validUserPass = e => {\r\n        setInputPass(e.target.value);\r\n\r\n        if (!inputPass.match(/[a-z]/g) ||\r\n            !inputPass.match(/[A-Z]/g) ||\r\n            !inputPass.match(/[0-9]/g) ||\r\n            inputPass.length < 8) {\r\n            setErrorUserPass(true);\r\n        }\r\n        else {\r\n            setErrorUserPass(false)\r\n        }\r\n    }\r\n\r\n    // validation input Confirm password\r\n    const validUserConPass = e => {\r\n        setInputConPass(e.target.value);\r\n        if (inputConPass !== \"\" && inputConPass === inputPass && inputPass !== \"\") {\r\n            setErrorUserConPass(false);\r\n        } else {\r\n            setErrorUserConPass(true);\r\n        }\r\n\r\n    }\r\n\r\n    // validation input email\r\n    const regEx = (text) => {\r\n\r\n        let mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        return text.match(mailformat);\r\n    }\r\n    const validUserEmail = e => {\r\n        setInputEmail(e.target.value);\r\n        if (!regEx(inputEmail)) {\r\n            setErrorUserEmail(true);\r\n        } else {\r\n            setErrorUserEmail(false);\r\n        }\r\n\r\n    }\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        let data = {};\r\n        if (inputName === \"\") {\r\n            setErrorUserName(true);\r\n            return false;\r\n        } else {\r\n            setErrorUserName(false);\r\n            data[\"UserName\"] = inputName;\r\n        }\r\n        if (inputPass === \"\") {\r\n            setErrorUserPass(true);\r\n            return false;\r\n        } else {\r\n            setErrorUserPass(false);\r\n            data[\"UserPass\"] = inputPass;\r\n        }\r\n        if (selectButton === \"signUp\") {\r\n\r\n            if (inputConPass === \"\") {\r\n                setErrorUserConPass(true);\r\n                return false;\r\n            } else {\r\n                setErrorUserConPass(false);\r\n                data[\"UserPass\"] = inputConPass;\r\n            }\r\n            if (inputEmail === \"\") {\r\n                setErrorUserEmail(true)\r\n                return false;\r\n            } else {\r\n                setErrorUserEmail(false);\r\n                data[\"UserEmail\"] = inputEmail;\r\n            }\r\n            // post Sign Up\r\n            const SIGNUP_URL = `${URL}?userername=${data.UserName}&email=${data.UserPass}`;\r\n\r\n            // fetch(SIGNUP_URL)\r\n            fetch(URL, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(data),\r\n            })\r\n\r\n                .then(response => {\r\n                    if (response.status >= 200 || response.status < 210) {\r\n                        console.log(response, \"response\")\r\n                        return response.json()\r\n                    }\r\n                    else console.log(\"we have an error\")\r\n                })\r\n                .then((data) => {\r\n                    console.log(data)\r\n                    newUsers(data)\r\n                    alert(\"Thank you, registration completed successfully\")\r\n                   \r\n                })\r\n                .catch(erro => console.log(\"error\"))\r\n            return\r\n        }\r\n        // fetch(SIGNIN_URL)\r\n        fetch(`${URL}?email=${data.email}`)\r\n            .then(response => {\r\n                if (response.status >= 200 || response.status < 210) {\r\n                    console.log(response, \"response\")\r\n                    return response.json()\r\n                }\r\n                else console.log(\"we have an error\")\r\n            })\r\n            .then((data) => {\r\n                console.log(data)\r\n\r\n                newUsers(data)\r\n       \r\n                alert(\"Thank you, login completed successfully\");\r\n\r\n            })\r\n            .catch(erro => console.log(\"error\"))\r\n        return\r\n\r\n        console.log(data, \"data\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form\r\n            id=\"forms\"\r\n            name=\"forms\"\r\n            onSubmit={submitForm}\r\n        >\r\n            <div id=\"form_sing_in\">\r\n                <p>User Name</p>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"inp\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onBlur={validUserName}\r\n                />\r\n                {errorUserName ? <span id=\"spanN\">fill in all fields</span> : null}\r\n\r\n                <p>Password</p>\r\n                <Input\r\n                    className=\"inp\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onBlur={validUserPass}\r\n                />\r\n                {errorUserPass ? <span id=\"spanEm\" >enter the correct kind of password</span> : null}\r\n\r\n                {selectButton === \"signUp\" ? <SignUp\r\n                    validUserEmail={e => validUserEmail(e)}\r\n                    errorUserEmail={errorUserEmail}\r\n                    validUserConPass={e => validUserConPass(e)}\r\n                    errorUserConPass={errorUserConPass}\r\n                /> : null}\r\n\r\n            </div>\r\n\r\n            <div className=\"checkboxText_buttn\">\r\n                <p className=\"checkboxText\">\r\n                    <Input\r\n                        type=\"checkbox\"\r\n                        id=\"checkbox\"\r\n                        value=\"Remember my?\"\r\n                        onclick=\"saveUser()\"\r\n                    />\r\n                                    Remember my?\r\n                </p>\r\n                {selectButton === \"signIn\" ? <button\r\n                    className=\"signIn_signUp\"\r\n                    name=\"SIGN IN\"\r\n                    id=\"signIn_signUp\"\r\n                    type=\"submit\"\r\n                >\r\n                    SIGN IN\r\n                    </button> : <button\r\n                    className=\"signIn_signUp\"\r\n                    name=\"SIGN UP\"\r\n                    id=\"signIn_signUp\"\r\n                    type=\"submit\"\r\n                >\r\n                    SIGN UP\r\n                    </button>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        newUserReducer: state.newUserReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        newUser,\r\n    },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n\r\n","\nimport { useState } from \"react\";\nimport Input from \"./form/Input\";\nimport SignIn from \"./form/SignIn\";\nimport \"./style/App.css\";\n\nfunction App() {\n\n\n  const [selectButton, setSelectButton] = useState(\"signIn\");\n\n\n\n  const clickButtonSignIn = (e) => {\n    setSelectButton(\"signIn\");\n  }\n\n  const clickButtonSignUp = (e) => {\n    setSelectButton(\"signUp\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"container\">\n        <div id=\"h1\">\n          <h1>CREATIVE SIGN IN & SIGN UP FORMS</h1>\n        </div>\n\n        <div id=\"Forms_and_img\">\n          <div id=\"forms_and_button\" >\n\n            <div id=\"signIn_signUp_button\">\n\n              <Input\n                type=\"button\"\n                className=\"button_text_style\"\n                id=\"ButtonInput\"\n                value=\"Sign In\"\n                onClick={clickButtonSignIn}\n              />\n\n              <Input\n                type=\"button\"\n                className=\"button_text_style\"\n                id=\"ButtonRegister\"\n                onClick={clickButtonSignUp}\n                value=\"Sign Up\"\n              />\n\n              {/* <form  method=\"POST\" id=\"forms\" name=\"forms\" onsubmit=\"return validateForm()\"> */}\n              <SignIn selectButton={selectButton}  clickButtonSignIn = {clickButtonSignIn}/>\n\n            </div>\n          </div>\n\n          <div id=\"img\">\n            <img src=\"./../image.jpg\" alt=\"img\" width=\"100%\" height=\"100%\"/>\n          </div>\n        </div>\n      </div>\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import newUserReducer from \"./signInReduser\";\r\n\r\n\r\nexport const rootReduser = {\r\n    // signInReduser : signInReduser,\r\n    newUserReducer: newUserReducer,\r\n\r\n}","import { NEW_USER } from \"../constant/constant\";\r\n\r\n\r\n// const ACTION_HANDLER = {\r\n//   [NEW_USER]: (state, action)=> {\r\n//     return action.payload;\r\n//   },\r\n\r\n// }\r\n\r\nconst newUserReducer = (state = null, action) => {\r\n    //   const handler = ACTION_HANDLER[action.type];\r\n    //   return handler? handler(state, action): state\r\n    switch (action.type) {\r\n        case NEW_USER:\r\n            return {\r\n                state: action.payload,\r\n            }\r\n        default:\r\n           return {\r\n               ...state\r\n            }\r\n\r\n    }\r\n}\r\n\r\nexport default newUserReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { rootReduser } from './redusers/rootReduser';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore( combineReducers (rootReduser), applyMiddleware(thunk.withExtraArgument()));\n\nReactDOM.render(\n\n <Provider store = { store } >\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}